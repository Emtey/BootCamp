//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Entities {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("ItemsDataSet")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ItemsDataSet : System.Data.DataSet {
        
        private ItemsDataTable tableItems;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ItemsDataSet() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ItemsDataSet(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["Items"] != null)) {
                    base.Tables.Add(new ItemsDataTable(ds.Tables["Items"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ItemsDataTable Items {
            get {
                return this.tableItems;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            ItemsDataSet cln = ((ItemsDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Items"] != null)) {
                    base.Tables.Add(new ItemsDataTable(ds.Tables["Items"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableItems = ((ItemsDataTable)(base.Tables["Items"]));
            if ((initTable == true)) {
                if ((this.tableItems != null)) {
                    this.tableItems.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "ItemsDataSet";
            this.Prefix = "";
            this.Namespace = "http://library.org/ItemsDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableItems = new ItemsDataTable();
            base.Tables.Add(this.tableItems);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeItems() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            ItemsDataSet ds = new ItemsDataSet();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void ItemsRowChangeEventHandler(object sender, ItemsRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ItemsDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnisbn;
            
            private System.Data.DataColumn columntitle_no;
            
            private System.Data.DataColumn columntranslation;
            
            private System.Data.DataColumn columncover;
            
            private System.Data.DataColumn columnloanable;
            
            private System.Data.DataColumn columntitle_no1;
            
            private System.Data.DataColumn columntitle;
            
            private System.Data.DataColumn columnauthor;
            
            private System.Data.DataColumn columnsynopsis;
            
            private System.Data.DataColumn columnisbn1;
            
            private System.Data.DataColumn columncopy_no;
            
            private System.Data.DataColumn columntitle_no2;
            
            private System.Data.DataColumn columnmember_no;
            
            private System.Data.DataColumn columnout_date;
            
            private System.Data.DataColumn columndue_date;
            
            private System.Data.DataColumn columnon_loan;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemsDataTable() {
                this.TableName = "Items";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ItemsDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ItemsDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn isbnColumn {
                get {
                    return this.columnisbn;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn title_noColumn {
                get {
                    return this.columntitle_no;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn translationColumn {
                get {
                    return this.columntranslation;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn coverColumn {
                get {
                    return this.columncover;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn loanableColumn {
                get {
                    return this.columnloanable;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn title_no1Column {
                get {
                    return this.columntitle_no1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn titleColumn {
                get {
                    return this.columntitle;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn authorColumn {
                get {
                    return this.columnauthor;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn synopsisColumn {
                get {
                    return this.columnsynopsis;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn isbn1Column {
                get {
                    return this.columnisbn1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn copy_noColumn {
                get {
                    return this.columncopy_no;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn title_no2Column {
                get {
                    return this.columntitle_no2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn member_noColumn {
                get {
                    return this.columnmember_no;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn out_dateColumn {
                get {
                    return this.columnout_date;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn due_dateColumn {
                get {
                    return this.columndue_date;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn on_loanColumn {
                get {
                    return this.columnon_loan;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemsRow this[int index] {
                get {
                    return ((ItemsRow)(this.Rows[index]));
                }
            }
            
            public event ItemsRowChangeEventHandler ItemsRowChanging;
            
            public event ItemsRowChangeEventHandler ItemsRowChanged;
            
            public event ItemsRowChangeEventHandler ItemsRowDeleting;
            
            public event ItemsRowChangeEventHandler ItemsRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddItemsRow(ItemsRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemsRow AddItemsRow(int isbn, int title_no, string translation, string cover, string loanable, string title, string author, string synopsis, int isbn1, short copy_no, int title_no2, short member_no, System.DateTime out_date, System.DateTime due_date, string on_loan) {
                ItemsRow rowItemsRow = ((ItemsRow)(this.NewRow()));
                rowItemsRow.ItemArray = new object[] {
                        isbn,
                        title_no,
                        translation,
                        cover,
                        loanable,
                        null,
                        title,
                        author,
                        synopsis,
                        isbn1,
                        copy_no,
                        title_no2,
                        member_no,
                        out_date,
                        due_date,
                        on_loan};
                this.Rows.Add(rowItemsRow);
                return rowItemsRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                ItemsDataTable cln = ((ItemsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new ItemsDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnisbn = base.Columns["isbn"];
                this.columntitle_no = base.Columns["title_no"];
                this.columntranslation = base.Columns["translation"];
                this.columncover = base.Columns["cover"];
                this.columnloanable = base.Columns["loanable"];
                this.columntitle_no1 = base.Columns["title_no1"];
                this.columntitle = base.Columns["title"];
                this.columnauthor = base.Columns["author"];
                this.columnsynopsis = base.Columns["synopsis"];
                this.columnisbn1 = base.Columns["isbn1"];
                this.columncopy_no = base.Columns["copy_no"];
                this.columntitle_no2 = base.Columns["title_no2"];
                this.columnmember_no = base.Columns["member_no"];
                this.columnout_date = base.Columns["out_date"];
                this.columndue_date = base.Columns["due_date"];
                this.columnon_loan = base.Columns["on_loan"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnisbn = new System.Data.DataColumn("isbn", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnisbn);
                this.columntitle_no = new System.Data.DataColumn("title_no", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columntitle_no);
                this.columntranslation = new System.Data.DataColumn("translation", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columntranslation);
                this.columncover = new System.Data.DataColumn("cover", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncover);
                this.columnloanable = new System.Data.DataColumn("loanable", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnloanable);
                this.columntitle_no1 = new System.Data.DataColumn("title_no1", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columntitle_no1);
                this.columntitle = new System.Data.DataColumn("title", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columntitle);
                this.columnauthor = new System.Data.DataColumn("author", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnauthor);
                this.columnsynopsis = new System.Data.DataColumn("synopsis", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsynopsis);
                this.columnisbn1 = new System.Data.DataColumn("isbn1", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnisbn1);
                this.columncopy_no = new System.Data.DataColumn("copy_no", typeof(short), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncopy_no);
                this.columntitle_no2 = new System.Data.DataColumn("title_no2", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columntitle_no2);
                this.columnmember_no = new System.Data.DataColumn("member_no", typeof(short), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnmember_no);
                this.columnout_date = new System.Data.DataColumn("out_date", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnout_date);
                this.columndue_date = new System.Data.DataColumn("due_date", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndue_date);
                this.columnon_loan = new System.Data.DataColumn("on_loan", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnon_loan);
                this.columnisbn.AllowDBNull = false;
                this.columntitle_no.AllowDBNull = false;
                this.columntranslation.MaxLength = 8;
                this.columncover.MaxLength = 8;
                this.columnloanable.MaxLength = 1;
                this.columntitle_no1.AutoIncrement = true;
                this.columntitle_no1.AllowDBNull = false;
                this.columntitle_no1.ReadOnly = true;
                this.columntitle.AllowDBNull = false;
                this.columntitle.MaxLength = 63;
                this.columnauthor.AllowDBNull = false;
                this.columnauthor.MaxLength = 31;
                this.columnsynopsis.MaxLength = 2147483647;
                this.columnisbn1.AllowDBNull = false;
                this.columncopy_no.AllowDBNull = false;
                this.columntitle_no2.AllowDBNull = false;
                this.columnmember_no.AllowDBNull = false;
                this.columnout_date.AllowDBNull = false;
                this.columndue_date.AllowDBNull = false;
                this.columnon_loan.AllowDBNull = false;
                this.columnon_loan.MaxLength = 1;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemsRow NewItemsRow() {
                return ((ItemsRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new ItemsRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(ItemsRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ItemsRowChanged != null)) {
                    this.ItemsRowChanged(this, new ItemsRowChangeEvent(((ItemsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ItemsRowChanging != null)) {
                    this.ItemsRowChanging(this, new ItemsRowChangeEvent(((ItemsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ItemsRowDeleted != null)) {
                    this.ItemsRowDeleted(this, new ItemsRowChangeEvent(((ItemsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ItemsRowDeleting != null)) {
                    this.ItemsRowDeleting(this, new ItemsRowChangeEvent(((ItemsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveItemsRow(ItemsRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ItemsDataSet ds = new ItemsDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ItemsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ItemsRow : System.Data.DataRow {
            
            private ItemsDataTable tableItems;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ItemsRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableItems = ((ItemsDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int isbn {
                get {
                    return ((int)(this[this.tableItems.isbnColumn]));
                }
                set {
                    this[this.tableItems.isbnColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int title_no {
                get {
                    return ((int)(this[this.tableItems.title_noColumn]));
                }
                set {
                    this[this.tableItems.title_noColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string translation {
                get {
                    try {
                        return ((string)(this[this.tableItems.translationColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'translation\' in table \'Items\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItems.translationColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cover {
                get {
                    try {
                        return ((string)(this[this.tableItems.coverColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'cover\' in table \'Items\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItems.coverColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string loanable {
                get {
                    try {
                        return ((string)(this[this.tableItems.loanableColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'loanable\' in table \'Items\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItems.loanableColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int title_no1 {
                get {
                    return ((int)(this[this.tableItems.title_no1Column]));
                }
                set {
                    this[this.tableItems.title_no1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string title {
                get {
                    return ((string)(this[this.tableItems.titleColumn]));
                }
                set {
                    this[this.tableItems.titleColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string author {
                get {
                    return ((string)(this[this.tableItems.authorColumn]));
                }
                set {
                    this[this.tableItems.authorColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string synopsis {
                get {
                    try {
                        return ((string)(this[this.tableItems.synopsisColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'synopsis\' in table \'Items\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItems.synopsisColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int isbn1 {
                get {
                    return ((int)(this[this.tableItems.isbn1Column]));
                }
                set {
                    this[this.tableItems.isbn1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short copy_no {
                get {
                    return ((short)(this[this.tableItems.copy_noColumn]));
                }
                set {
                    this[this.tableItems.copy_noColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int title_no2 {
                get {
                    return ((int)(this[this.tableItems.title_no2Column]));
                }
                set {
                    this[this.tableItems.title_no2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short member_no {
                get {
                    return ((short)(this[this.tableItems.member_noColumn]));
                }
                set {
                    this[this.tableItems.member_noColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime out_date {
                get {
                    return ((System.DateTime)(this[this.tableItems.out_dateColumn]));
                }
                set {
                    this[this.tableItems.out_dateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime due_date {
                get {
                    return ((System.DateTime)(this[this.tableItems.due_dateColumn]));
                }
                set {
                    this[this.tableItems.due_dateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string on_loan {
                get {
                    return ((string)(this[this.tableItems.on_loanColumn]));
                }
                set {
                    this[this.tableItems.on_loanColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstranslationNull() {
                return this.IsNull(this.tableItems.translationColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettranslationNull() {
                this[this.tableItems.translationColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoverNull() {
                return this.IsNull(this.tableItems.coverColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoverNull() {
                this[this.tableItems.coverColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsloanableNull() {
                return this.IsNull(this.tableItems.loanableColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetloanableNull() {
                this[this.tableItems.loanableColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssynopsisNull() {
                return this.IsNull(this.tableItems.synopsisColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsynopsisNull() {
                this[this.tableItems.synopsisColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ItemsRowChangeEvent : System.EventArgs {
            
            private ItemsRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemsRowChangeEvent(ItemsRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Entities.ItemsDataSetTableAdapters {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ItemsTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ItemsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Items";
            tableMapping.ColumnMappings.Add("isbn", "isbn");
            tableMapping.ColumnMappings.Add("title_no", "title_no");
            tableMapping.ColumnMappings.Add("translation", "translation");
            tableMapping.ColumnMappings.Add("cover", "cover");
            tableMapping.ColumnMappings.Add("loanable", "loanable");
            tableMapping.ColumnMappings.Add("title_no1", "title_no1");
            tableMapping.ColumnMappings.Add("title", "title");
            tableMapping.ColumnMappings.Add("author", "author");
            tableMapping.ColumnMappings.Add("synopsis", "synopsis");
            tableMapping.ColumnMappings.Add("isbn1", "isbn1");
            tableMapping.ColumnMappings.Add("copy_no", "copy_no");
            tableMapping.ColumnMappings.Add("title_no2", "title_no2");
            tableMapping.ColumnMappings.Add("member_no", "member_no");
            tableMapping.ColumnMappings.Add("out_date", "out_date");
            tableMapping.ColumnMappings.Add("due_date", "due_date");
            tableMapping.ColumnMappings.Add("on_loan", "on_loan");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Entities.Properties.Settings.Default.libraryConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.usp_item";
            this._commandCollection[0].CommandType = System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, 10, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@memberId", System.Data.SqlDbType.SmallInt, 2, System.Data.ParameterDirection.Input, 5, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ItemsDataSet.ItemsDataTable dataTable, System.Nullable<short> memberId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((memberId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((short)(memberId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ItemsDataSet.ItemsDataTable GetData(System.Nullable<short> memberId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((memberId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((short)(memberId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = System.DBNull.Value;
            }
            ItemsDataSet.ItemsDataTable dataTable = new ItemsDataSet.ItemsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
}

#pragma warning restore 1591